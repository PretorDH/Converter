<?php
/**
 * Copyright (c) 2019. DeParadox LLC
 */

/**
 * Created by PhpStorm.
 * User: PretorDH (Serhii Usik)
 * Date: 06.01.2019
 * Time: 22:14
 */

namespace app\common;


use app\interfaces\Controller as ControllerInterface;
use app\interfaces\View as ViewInterface;

/**
 * Class Controller
 * @package app\common
 */
class Controller implements ControllerInterface {
    /**
     * Content generated by action
     *
     * @var
     */
    protected $content = '';

    /**
     * Request accept header
     *
     * @var array
     */
    protected $accept;


    /**
     * Controller constructor.
     * Create user role and detect restrictions for access controller
     */
    public function __construct() {
        preg_match(self::ACCEPT_PATTERN,
            filter_input(INPUT_SERVER, 'HTTP_ACCEPT', FILTER_SANITIZE_STRING),
            $this->accept);
    }

    /**
     * Send response
     *
     * @param ViewInterface $view
     */
    public function response(ViewInterface $view, $code = 200) {
        http_response_code($code);
        header('Content-type: ' . $this->accept[0] . '; charset=utf-8');

        $view = new View('layout/layout.php',
            [
                'header' => new View('layout/header.php'),
                'content' => $view,
                'footer' => new View('layout/footer.php'),
                'styles' => new View('scripts/scripts.php'),
                'scripts' => new View('styles/styles.php'),
                'debug' => Info::getDebug(),
            ]
        );

        echo $view;
    }

    /**
     * Send response in JSON format
     *
     * @param array $data
     */
    public function responseJSON(array $data) {
        header('Content-type: application/json; charset=utf-8');
        header('Cache-Control: no-store, no-cache, must-revalidate');
        header('Cache-Control: post-check=0, pre-check=0', false);
        header('Pragma: no-cache');

        $data[] = ['target' => '#debug', 'content' => Info::getDebug()];

        try {
            echo json_encode($data);
        }
        catch (\Exception $exception) {
            echo json_encode($exception);
        }
    }

    /**
     * Send redirect request to front
     *
     * @param $link
     */
    public function redirect($link) {
        header('Location: ' . $link);
    }
}